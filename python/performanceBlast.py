import time
import random
from FlaskJob import BlastJob


seqs = ('''>reverse_13
ACACAATTGGATGAGCGTGCT''',
        '''>JN711499.1 Amakusaplana acroporae isolate BH65_67 18S ribosomal RNA gene, partial sequence
GTTCCTTGGATCGTGTATCTAACATGGATAACTGTGGGAATTCTAGAGCTAATACATGCA
TCAAAGCCATGACCGCAAGGGAACGGCGCATTTATTAGATCAAAACCAACCGGGCTTCGG
CCTGAGTGATTTGATGACTCTGGATAAACTTGAGCAGATCGCATGGCCTCGAGCCGGCGA
CGTATCCTTCAAATGTCTGCCCTATCAACTTACGTTGGTAGGTTACCTGCCTACCATGGT
GATCACGGGTAACGGGGAATCAGGGTTCGATTCCGGAGAGGGAGCATGAGAAACGGCTAC
CAGAACTACGGTTTGCAGCAGGCGCGCAAATTACCCACTCCCGGTACGGGGAGGTAGTGA
CGAAAAATAACAATACGGGTCTTTTTATAGGCCCCGTAATTGGAATGAGTACACCTTAAA
ACCATTAACGAGTACCAATTGGAGGGCAAGTCTGGTGCCAGCAGCCGCGGTAATTCCAGC
TCCAATAGCGTATATTAAAGTTGTTGCAGTTAAAAAGCTCGTAGTTGGATCTGAGGAGTG
GAGCCAATGGTTGGTCGCATGACTACACTGTTGGCTCGGCCTACATAGTCGGTGATTGTT
TTGGTGCTCTTAATTGAGTGCCTTAATTACCCGGCCACGTTTACTTTGAAAAAATTGGAG
TGCTCAAATCAGGCCTACTGCCTGAACAGATGTGCATGGAATAATGGAAAAGGACTTGGT
TCTATTTTGTTGGTTTTCGGAACATGAAGTAATGATTAAGAGGGACAGACGGGGGCATTC
GTATTGCGGTGGGAGAGGTGAAATTCTTAGATCATCGCAAGACGCCCTACAGCGAAAGCA
TTTGCCAAGAATGTTTCCATTAATCAAGAACGAAAGTCAGAGGTTCGAAGACGATCAGAT
ACCGTCCTAGTTCTGACCATAAACGATGCCAACTGGCAATCCGTTGCGATTGCAAGTTCG
ATCCAACGGGCAGCCTCCGGGAAACCAAAGTCTTTGGGTTCCGGGGGAAGTATGGTTGCA
AAGCTGAAACTTAAAGGAATTGACGGAAAGGCACCACAAGGAGTGGAGCCTGCGGCTTAA
TTTGACTCAACACGGGAAAACTCACCCGGCCCGGACACTGTGAGGATTGACAGATTGAAA
GCTCTTTCTTGATTCGGTGGGTGGTGGTGCATGGCCGTTCTTAGTTGGTGGAGCGATTTG
TCTGGTTAATTCCGATAACGAACGAGACTCTAGCCTACTAAATAGCACGCTCATCCAATT
GTGTGAGTGCATTTGCTTCTTAGGGGGATAAATGGTATTCAAACCATACGAAATTGAGCA
ATAACAGGTCTGTGATGCCCTTAGATGTCCGGGGCCGCACGCGCGCTACACTGAATAGCG
TAACGAGTTTCTCTCCTGGTCCGAAAGGTCCGGGCAACCTGTTGAAACCTATTCGTGACA
GGGATCGGGGCTTGTAATTCTTCCCCGTGAACGAGGAATTCCTAGTAAGCGCAAGTCATA
AACTTGCGTTGATTACGTCCCTGCCTTTTGTACACACCGCCCGTCGCTACTACCGATTGA
ATGGTTTAGCAAGGTCTTCGGATTGGCGCCTGAGTGGTTCTCCACTCTCGGTGATCGAGA
AGATGATCAAACTTGATCATTTAGAGGAAGTAAAAGTCGTAACAAGG''')

times = {}
for s, seq in enumerate(seqs):
    times[s] = {}
    for c in range(1, 11):
        times[s][c] = []

for _ in range(10):
    for s, seq in enumerate(seqs):
        cores = [c for c in range(1, 11)]
        while len(cores) > 0:
            core = random.choice(cores)
            cores.pop(cores.index(core))
            print(core)
            job = BlastJob()
            parameters = {'sequence': seq, 'num_threads': core}
            t0 = time.time()
            job.run(parameters=parameters, cache=False)
            while not job.finished:
                time.sleep(0.1)
            times[s][core].append(time.time() - t0)

print(times)
with open('blast_times.txt', 'w') as f:
    for s in range(len(seqs)):
        f.write(str(s) + '\n')
        ks = list(times[s].keys())
        ks.sort()
        for k in ks:
            f.write('  {}: {}\n'.format(k, times[s][k]))